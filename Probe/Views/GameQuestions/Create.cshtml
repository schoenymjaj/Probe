@model Probe.Models.GameQuestion

@{
    ViewBag.Title = "Create";
}

@functions{
    public bool AreRemainingQuestions()
    {
        bool returnStatus = false;
        if (ViewBag.QuestionId.Items.Count > 0)
        {
            returnStatus = true;
        }

        return returnStatus;
    }
}

<h2>Game Question - Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GameQuestion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GameId, "Game", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GameId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GameId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionId, "Question", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QuestionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QuestionId, "", new { @class = "text-danger" })
                @Html.TextArea("QuestionText", "My Test", 3, 15, htmlAttributes: new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
            </div>
        </div>

        <div style="clear: both"></div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Weight", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderNbr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNbr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNbr, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (AreRemainingQuestions()) {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" disabled class="btn btn-default" />
                </div>
            </div>
        }
        
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { SelectedGame = ViewBag.GameId.SelectedValue })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
