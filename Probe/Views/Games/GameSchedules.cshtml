@using Probe.Models
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /*styles below accomplished word wrapping of header columns in MyGamesGrid, but it didn't accomplish auto-column width*/
    .k-grid .k-grid-header .k-header .k-link {
        height: auto;
    }

    .k-grid .k-grid-header .k-header {
        white-space: normal;
    }

    /* ensure content wrapper is big enough for grid */
    .content-wrapper {
        max-width: 1200px;
    }

    .k-state-selected {
        background-color: #000000;
        border-color: #111111;
    }

    .gameschedulesGridCommandColumn { /*style grid command column*/
        padding-left: 3px;
        padding-right: 3px;
        width: 167px;
    }

    .gameschedulesGridCommandColumn .k-button { /*style all command buttons*/
        width: 79px;
    }

    #GridTitleLeftTextDiv {
        color: blue;
        font-weight: bolder;
        font-size: large;
        float: left;
        width: 75%;
        overflow: auto;
    }

    #backLinkDiv {
        float: left;
        width: 25%;
        overflow: hidden;
    }

    #dialog-generalMessage {
        padding-bottom: 10px;
    }

    .dialog-generalButtons {
        padding-top: 15px;
        float: right;
    }

    #detailsTemplate-container td {
        padding-bottom: 10px;
        font-weight: normal;
    }

    .detailsHeader {
        font-weight: bold;
    }

    .detailsLabel {
        font-weight: bolder;
        color: #00edf0;
    }

    .noDisplay {
        display: none;
    }
</style>


<h2><i><b>@ViewBag.GameName</b></i> Game Schedule</h2>
<div style="margin-bottom:5px;padding-bottom:10px;width:100%;overflow: auto">
    <div id="GridTitleLeftTextDiv">
        <span style="color:black">Game Type: </span><i>@ViewBag.GameTypeName</i>
    </div>
    <div id="backLinkDiv">
        <div style="margin:0px;float:right">
            @Html.ActionLink("Back to My Games", "Index", "Games")
        </div>
    </div>
</div>


@(@Html.Kendo().Grid<Probe.Models.View.GameQuestionScheduleDTO>().Name("MyGameSchedulesGrid").Columns(c =>
        {
            c.Bound(g => g.ScheduleName).Title("Name").Width(200);
            c.Bound(g => g.ScheduleDesc).Title("Description").Width(500);
            c.Bound(g => g.StartDate).Format("{0:dddd M/d/yy h:mm:ss tt}").Title("Start Date").Width(120);
            c.Bound(g => g.InterimDate).Format("{0:dddd M/d/yy h:mm:ss tt}").Title("Warning Date").Width(120);
            c.Bound(g => g.EndDate).Format("{0:dddd M/d/yy h:mm:ss tt}").Title("End Date").Width(120);
            c.Bound(g => g.TimeSpanString).Title("Time Span").Width(120);
        })
        .DataSource(d => d
            .Ajax()
            .Sort(sort => sort.Add("StartDate").Ascending())
            .Read(r => r.Action("GetGameSchedules", "Games").Data("ReturnGameHandler"))
            .Events(events => events
                .Error("MyErrorHandler"))
        )
        .Pageable(page => page.PageSizes(new[] { 5, 10, 20, 50, 100 }))
        .Filterable()
        .Sortable()
        .Selectable()
        //edit mode popup - disable the lame canned delete confirmation window. Popup
        .Events(events =>
                {
                    events.DataBound("OnGridDataBound");
                })   //Add event to attach event handlers to completely rendered grid
)

<div style="margin-top: 20px;float:left">
    @Html.ActionLink("Back to My Games", "Index", "Games")
</div>
<script>
    function ReturnGameHandler() {
        return {
            gameId: '@ViewBag.GameId'
        };
    }
</script>

<br />

<div id="dialog-details" title="Details" class="noDisplay"></div>
<div id="dialog-iframe" title="IFrame Play Preview" class="noDisplay"></div>
<div id="dialog-general" class="noDisplay">
    <div id="dialog-generalMessage"></div>
    <div id="dialog-generalMessage2"></div>
    <div class="dialog-generalButtons">
        <button id="yesGen" class="k-button">OK</button>
        <button id="noGen" class="k-button">Cancel</button>
    </div>
</div>
<div id="dialog-progress" class="noDisplay" style="text-align:center">
    <div id="progressbar" style="width:80%"></div>
</div>
<div id="progress-spinner" style="text-align:center"></div>
<!--
    TEMPLATES
-->

<!--  Supports the Message Sum mary on top of the Create/Edit popup  -->
<script type="text/x-kendo-template" id="SummaryValidationMessageTemplate">
    # if (messages.length) { #
    <ul>
        # for (var i = 0; i < messages.length; ++i) { #
        <li style="color:red">#= messages[i] #</li>
        # } #
    </ul>
    # } #
</script>

<!-- Supports the Inline Message -->
<script type="text/kendo-template" id="InLineMessage">
    <div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin: 0.5em; display: block;" data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage">
        <span class="k-icon k-warning"> </span>#=message#<div class="k-callout k-callout-n"></div>
    </div>
</script>


<!--
    END TEMPLATES
-->


<script>
    //global variable
    var root = '@Request.Url.Authority' + '@Url.Content("~")';
    var gameEditable = '@ViewBag.GameEditable';

    /*Supports the Inline Messages for MyGames Edit Popup attached to the Fields of the Edit Popup*/
    var validationMessageTmpl = kendo.template($("#InLineMessage").html());
</script>

<script src="@Url.Content("~/Scripts/probe/gameschedules.js")"
        type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/probe/probe-ui-common.js")"
        type="text/javascript"></script>

