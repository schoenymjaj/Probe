@model List<string> 
@{
    ViewBag.Title = "Home Page";
}


<div>
    <h2>Kendo Demo/Test</h2>
    <table>
        <tr>
            <td>

                @(Html.Kendo().PanelBar()
    .Name("IntroPanelBar")
    .Items(items =>
    {
        items.Add()
            .Text("Getting Started")
            .Selected(true)
            .Expanded(true)
            .Content(@<text>
                <p style="padding:0 1em">
                    ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                    enables a clean separation of concerns and that gives you full control over markup
                    for enjoyable, agile development. ASP.NET MVC includes many features that enable
                    fast, TDD-friendly development for creating sophisticated applications that use
                    the latest web standards.
                    <a href="http://go.microsoft.com/fwlink/?LinkId=245151">Learn more…</a>
                </p>
            </text>);
        items.Add()
            .Text("Add NuGet packages and jump-start your coding")
            .Content(@<text>
                <p style="padding:0 1em">
                    NuGet makes it easy to install and update free libraries and tools.
                    <a href="http://go.microsoft.com/fwlink/?LinkId=245153">Learn more…</a>
                </p>
            </text>);
        items.Add()
            .Text("Find Web Hosting")
            .Content(@<text>
                <p style="padding:0 1em">
                    You can easily find a web hosting company that offers the right mix of features
                    and price for your applications.
                    <a href="http://go.microsoft.com/fwlink/?LinkId=245157">Learn more…</a>
                </p>
            </text>);
    })
                )

            </td>
        </tr>

        <tr>
            <td>@Html.Kendo().DateTimePicker().Name("MyDatePicker").Value(DateTime.Now)</td>
        </tr>
        <tr>
            <td>
                @{
                    var ddList = new List<string>() { "Bills", "Mets", "Orioles", "Wizards", "Capitals" };
                }

                @Html.Kendo().DropDownList().Name("MyDropdownList").BindTo(@ddList)
            </td>
        </tr>
        <tr>
            <td>
                @Html.Kendo().DropDownList().Name("MyDropdownListFromController").BindTo(@Model)
            </td>
        </tr>
        <tr>
            <td>
                @*@(Html.Kendo().DropDownList().Name("MyPlayers")
                    .DataSource(dataSource => dataSource
                    .Read(read => read.Action("Index", "Players")
                    )).DataTextField("PlayerName")
                        )*@
            </td>
        </tr>
        <tr>
            <td>
                @*@(Html.Kendo().TreeView().Name("MyGamesTree")
                    .DataSource(dataSource => dataSource
                    .Read(read => read.Action("GetGamePlayers", "Games")
                    )).DataTextField("Name")
                        )*@
            </td>
        </tr>

    </table>


</div>
