@{
    ViewBag.Title = "PlayerMatchDetail";
}

<html>
<head>
    <title>Player Match Detail</title>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi "></script>
    <script type="text/javascript">

        @Html.Partial("ReportStyleJavaScript")

        google.load('visualization', '1', { packages: ['table'] });

        //google.setOnLoadCallback(drawContent);
        $(document).ready(function () { //appears to be clear up some timing problems for mobile (i.e. android emulator)
            drawContent();
        });
        function drawContent() {
            console.log('func drawContent');
            logError('PlayerMatchDetail - func drawContent start', arguments.callee.trace()); //Logging an event on the server

            if (IsActivitySelector(resize)) ActivityIndicatorOn('#spinner');

            var gamePlayId = '@ViewBag.GamePlayId';
            var playerId = '@ViewBag.PlayerId';
            var matchedPlayerId = '@ViewBag.MatchedPlayerId';

            $.post('@Url.Content("~")' + 'Reports/GetPlayerMatchDetailData/' + gamePlayId + '/' + playerId + '/' + matchedPlayerId, {},
            function (data) {


                //SET COLUMN WIDTHS
                setColumnWidths = function () {
                    $('.googleReportTableHeader:contains("Percnt Choice")').css('width', '40px'); //set the width of the percent choice column
                    $('.googleReportTableHeader:contains("Player Match")').css('width', '50px'); //set the width of the percent choice column
                };

                //HANDLER FOR INTERACTIVITY
                selectHandler = function () {
                    console.log('selectHandler');
                    var selectedItem = chart.getSelection()[0]; //will get player name
                    if (selectedItem) {
                        var matchedplayerId = data[selectedItem.row].MatchedPlayerId;
                        console.log('The player selected ' + matchedplayerId);

                        //event handler not supported at this time (9/4/14)
                    }
                };

                //Let's start catching exceptions
                try {

                    /*
                    SETUP REPORT HEADER
                    Header will be different - dependent on the mobile indicator
                    Back button will not exist if mobile indicator
                    */
                    if (data.length >= 1) {
                        if (DoStyleMobile()) {
                            $('#header').html('<span class="reportLabel" style="margin-right: 17px">Player</span>: ' + data[0].PlayerName + '<br/><span class="reportLabel reportLabelMargin">Matchup:</span> ' + data[0].MatchedPlayerName);
                            $('#appHome').click(function (event) {
                                window.history.go(-2);
                            });
                            $('.reportReturnLink').hide();
                        } else {
                            $('#header').html('<span class="reportLabel" style="margin-right: 17px">Player</span>: ' + data[0].PlayerName + ' <span class="reportLabel reportLabelMargin">Matchup:</span> ' + data[0].MatchedPlayerName);
                            $('.reportReturnLink').html('@Html.ActionLink("Back to Player Match Totals", "PlayerMatchSummary", "Reports")');
                        }
                    }

                    /*
                    SETUP GOOGLE TABLE DATA
                    */
                    var tdata = new google.visualization.DataTable();

                    tdata.addColumn('string', 'Question');
                    tdata.addColumn('string', 'Player Choice');
                    tdata.addColumn('string', 'Matchup Choice');
                    tdata.addColumn('number', 'Percnt Choice');

                    rowlength = 4;
                    rowVector = new Array(rowlength);

                    matchCount = 0;
                    for (var i = 0; i < data.length; i++) {
                        
                        cellClassName = 'googleReportCellNO';
                        if (data[i].Match == 1) {
                            cellClassName = 'googleReportCellYES'
                            matchCount++;
                        } else {
                            cellClassName = 'googleReportCellNO';
                        }

                        row = 0;
                        rowVector[row++] = { v: data[i].Question, p: { 'className': cellClassName } };
                        rowVector[row++] = { v:data[i].PlayerChoice, p: { 'className': cellClassName } };
                        rowVector[row++] = { v:data[i].MatchedPlayerChoice, p: { 'className': cellClassName } };
                        rowVector[row++] = { v: data[i].PercentChosen, p: { 'className': cellClassName } };

                        tdata.addRow(rowVector);
                    }

                    $('.tableHeader').html(matchCount + ' Matches out of ' + data.length + ' Questions');

                    var options = {
                        allowHtml: true,
                        cssClassNames: {
                            headerCell: 'googleReportTableHeader',
                            tableCell: 'googleReportTableNonHeader',
                            tableRow: 'googleReportTableNonHeader'
                    }
                    };


                    var tableAll = new google.visualization.Table(document.getElementById('table_div'));
                    google.visualization.events.addListener(tableAll, 'ready', setColumnWidths);
                    google.visualization.events.addListener(tableAll, 'select', selectHandler);
                    tableAll.draw(tdata, options);

                    if (IsActivitySelector(resize)) ActivitySelectorOff('#spinner');

                    logError('PlayerMatchDetail - func drawContent end', null); //Logging an event on the server

                } catch (err) {
                    if (arguments != null && arguments.callee != null && arguments.callee.trace) {
                        logError(err, arguments.callee.trace());
                    } else {
                        logError(err, null);
                    }

                    //retry generating the report (ie.e android emulator had a problem)
                    //window.location.reload(true); hopefully won't don't need this. loading via document ready alleviated issue
                }
            });
        }
    </script>
</head>
<body>
    <div id='spinner'></div>
    <div id="title" class="reportTitle">Player - Player Match Details</div>
    <div class="reportReturnLink"></div>
    <div class="reportResetSytle"></div>
    <div class="reportGameHeader"><span class="reportLabel" style="margin-right: 20px">Game</span>: @ViewBag.GamePlayName</div>
    <div id="header" class="reportHeader"></div>
    <div class="tableHeader"></div>
    <div id="table_div" class="tableMatch"></div>
</body>
</html>
