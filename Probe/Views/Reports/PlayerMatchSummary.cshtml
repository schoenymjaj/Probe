@{
    ViewBag.Title = "PlayerMatchSummary";
}

<html>
<head>
    <title>Player Match Summary</title>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi "></script>
    <script type="text/javascript">

    @Html.Partial("ReportStyleJavaScript")

    google.load("visualization", "1", { packages: ["corechart"] });

    //google.setOnLoadCallback(drawContent);
    $(document).ready(function () { //appears to be clear up some timing problems for mobile (i.e. android emulator)
        drawContent();
    });

    function drawContent() {
        console.log('func drawContent');
        logError('PlayerMatchSummary - func drawContent start', arguments.callee.trace()); //Logging an event on the server

        if (IsActivitySelector(resize)) ActivityIndicatorOn('#spinner');

        var gamePlayId = '@ViewBag.GamePlayId';
        var playerId = '@ViewBag.PlayerId';

        $.post('@Url.Content("~")' + 'Reports/GetPlayerMatchSummaryData/' + gamePlayId + '/' + playerId, {},
        function (data) {

            //HANDLER FOR INTERACTIVITY
            selectHandler = function () {
                console.log('selectHandler');
                var selectedItem = chart.getSelection()[0]; //will get player name
                if (selectedItem) {
                    var matchedPlayerId = data[selectedItem.row].Id;
                    console.log('The player selected ' + matchedPlayerId);

                    window.location = '@Url.Content("~")' + 'Reports/PlayerMatchDetail/'
                        + gamePlayId + '/' + playerId + '/' + matchedPlayerId + (DoStyleMobile() ? '/1' : '');

                }
            };

            //Let's start catching exceptions
            try {

                /*
                SETUP REPORT HEADER
                Header will be different - dependent on the mobile indicator
                Back button will not exist if report loads within an iFrame (then its in mobile mode)
                */
                if (DoStyleMobile()) {
                    $('#header').html('<span class="reportLabel">Game</span>: ' + '@ViewBag.GamePlayName' + '<br/><span class="reportLabel reportLabelMargin">Player</span>: ' + '@ViewBag.PlayerName');
                    //$('.reportReturnLink').html('<a href="#" onclick="javascript: window.history.go(-1); return false;">Go Back</a>');
                } else {
                    $('#header').html('<span class="reportLabel">Game</span>: ' + '@ViewBag.GamePlayName' + '  <span class="reportLabel reportLabelMargin">Player</span>: ' + '@ViewBag.PlayerName');
                    $('.reportReturnLink').html('@Html.ActionLink("Back to Game Match Summary", "GamePlayerMatchMinMax", "Reports")');
                }

                /*
                SETUP GOOGLE CHART DATA
                */
                maxTickValue = 0;

                var dSeries = new Array(data.length + 1);
                dSeries[0] = new Array(3)
                dSeries[0][0] = 'Player';
                dSeries[0][1] = 'Matches';
                dSeries[0][2] = { role: 'annotation' };
                for (var i = 0; i < data.length; i++) {
                    dSeries[i + 1] = new Array(3)
                    dSeries[i + 1][0] = data[i].Name;
                    dSeries[i + 1][1] = data[i].Value;

                    legendStr = '(' + data[i].Value + ')';
                    if (DoStyleMobile()) {
                        legendStr = data[i].Name + '(' + data[i].Value + ')';
                    }
                    dSeries[i + 1][2] = legendStr;

                    maxTickValue = Math.max(maxTickValue, data[i].Value);
                }
                var tdata = google.visualization.arrayToDataTable(dSeries);

                /*
                SETUP V-AXIS
                */
                var vAxisText = '# Matches out of ' + '@ViewBag.NbrQuestions';

                /*
                SETUP GOOGLE CHART STYLE THROUGH OPTIONS
                */

                //We're going use just 5 gridlines (vertical). The first will be 0 (doesn't count)
                //, the last will be the max
                tickArray = GetChartAxisTickets(0, maxTickValue, 4);

                var options = {};
                if (DoStyleMobile()) {

                    options = {
                        height: Math.round(70 * data.length),
                        chartArea: { left: 10, top: 25, right: 10, width: '95%', height: '75%' }, //WIDTH CONTROLS IF YOU CAN SEE THE LAST TICK NUMBER
                        hAxis: {
                            title: vAxisText,
                            format: '#',
                            titleTextStyle: { fontSize: '20' },
                            ticks: tickArray
                        },
                        bar: { groupWidth: "75%" }, //CONTROLS SIZE OF BAR AND SPACE BETWEEN BARS
                        annotations: {
                            textStyle: {
                                fontName: 'Times-Roman',
                                fontSize: 18,
                                bold: true,
                                italic: true,
                                opacity: 0.8          // The transparency of the text.
                            }
                        },
                        legend: { position: 'top', alignment: 'end', textStyle: { color: 'blue', fontSize: 16 } },
                    };


                } else {

                    options = {
                        //title: 'TITLE',
                        //width: 95%, DONT NEED THIS; WE HAVE TURNED ON RESIZING
                        height: Math.round(100 * data.length),
                        chartArea: { left: 150, top: 25, width: '80%', height: '75%' }, //WIDTH CONTROLS IF YOU CAN SEE THE LAST TICK NUMBER
                        vAxis: { title: 'Players', titleTextStyle: { fontSize: '25' } },
                        hAxis: {
                            title: vAxisText,
                            format: '#',
                            titleTextStyle: { fontSize: '25' },
                            ticks: tickArray
                        },
                        bar: { groupWidth: "75%" }, //CONTROLS SIZE OF BAR AND SPACE BETWEEN BARS
                        legend: { position: 'top', alignment: 'end', textStyle: { color: 'blue', fontSize: 16 } },
                    };

                }//if (DoStyleMobile()) {


                var chart = new google.visualization.BarChart($('#chart_div')[0]); //jquery for document.getElementById
                google.visualization.events.addListener(chart, 'select', selectHandler);
                chart.draw(tdata, options);

                if (IsActivitySelector(resize)) ActivitySelectorOff('#spinner');

                logError('PlayerMatchSummary - func drawContent end', null); //Logging an event on the server

            } catch (err) {
                if (arguments != null && arguments.callee != null && arguments.callee.trace) {
                    logError(err, arguments.callee.trace());
                } else {
                    logError(err, null);
                }

                //retry generating the report (ie.e android emulator had a problem)
                //window.location.reload(true); hopefully won't don't need this. loading via document ready alleviated issue
            }

        });
    }//function drawContent() {
    </script>
</head>
<body>
    <div id='spinner'></div>
    <div id="title" class="reportTitle">Player Match Totals</div>
    <div class="reportReturnLink"></div>
    <div class="reportResetSytle"></div>
    <div id="header" class="reportHeader"></div>
    <div id="parent_chart_div">
        <div id="chart_div"></div>
    </div>
</body>
</html>
