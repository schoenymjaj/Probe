@{
    ViewBag.Title = "PlayerLMSSummary";
}

<html>
<head>
    <title>Player Match Summary</title>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi "></script>
    <script type="text/javascript">

    @Html.Partial("ReportStyleJavaScript")

    google.load("visualization", "1", { packages: ["corechart"] });

    //google.setOnLoadCallback(drawContent);
    $(document).ready(function () { //appears to be clear up some timing problems for mobile (i.e. android emulator)
        drawContent();
    });

    function drawContent() {
        console.log('func drawContent');
        logError('PlayerLMSSummary - func drawContent start', arguments.callee.trace()); //Logging an event on the server

        if (IsActivitySelector(resize)) ActivityIndicatorOn('#spinner');

        var gameId = '@ViewBag.GameId';
        var gameCode = '@ViewBag.GameCode';
        var playerStatusFilter = '@ViewBag.PlayerStatusFilter';


        $.getJSON('@Url.Content("~")' + 'api/Reports/GetPlayerLMSSummaryData/' + gameId + '/' + gameCode + '/' + playerStatusFilter, {},
        function (data) {

            //HANDLER FOR INTERACTIVITY
            selectHandler = function () {
                console.log('selectHandler');
                var selectedItem = chart.getSelection()[0]; //will get player name
                if (selectedItem) {
                    var playerId = data[selectedItem.row].PlayerId;
                    console.log('The player selected ' + playerId);

                    window.location = '@Url.Content("~")' + 'Reports/PlayerLMSDetail/'
                        + gameId + '/' + gameCode + '/' + playerId;

                }
            };

            //Let's start catching exceptions
            try {

                /*
                check if there is enough players to match for this report
                */
                if (data.length == 0) {
                    if (IsActivitySelector(resize)) ActivitySelectorOff('#spinner');
                    alert('This results reports requires at least one player game submission.');
                    return;
                }

                /*
                SETUP GOOGLE CHART DATA
                */
                maxTickValue = 0;
                nbrAnswersCorrect = 0;
                nbrAnswersIncorrect = 0;
                nbrAnswersNotOntime = 0;
                maxSubmittedQuestionNbr = 0;

                var dSeries = new Array(data.length + 1);
                dSeries[0] = new Array(4)
                dSeries[0][0] = 'Player';
                dSeries[0][1] = '#Questions Correct';
                dSeries[0][2] = { role: 'annotation' };
                dSeries[0][3] = 'Question InCorrect';
                dSeries[0][4] = { role: 'annotation' };
                dSeries[0][5] = 'Question Not On-time';
                dSeries[0][6] = { role: 'annotation' };

                for (var i = 0; i < data.length; i++) {

                    dSeries[i + 1] = new Array(3)
                    dSeries[i + 1][0] = data[i].PlayerName;

                    //Based on the player's status, number of questions submitted, and
                    //the game reason we can derive how many answers submitted were correct
                    //and if there was an incorrect answer or an answer that was not submitted in-time
                    if (data[i].PlayerStatus) {
                        nbrAnswersCorrect = data[i].QuestionNbrLastSubmitted + 1;
                        nbrAnswersIncorrect = 0;
                        nbrAnswersNotOntime = 0;
                    } else {
                        if (data[i].PlayerGameReason == ANSWER_REASON_INCORRECT) {
                            nbrAnswersCorrect = data[i].QuestionNbrLastSubmitted;
                            nbrAnswersIncorrect = 1;
                            nbrAnswersNotOntime = 0;
                        } else if (data[i].PlayerGameReason == ANSWER_REASON_DEADLINE) {
                            nbrAnswersCorrect = data[i].QuestionNbrLastSubmitted + 1;
                            nbrAnswersIncorrect = 0;
                            nbrAnswersNotOntime = 1;
                        } else {
                            nbrAnswersCorrect = data[i].QuestionNbrLastSubmitted;
                            nbrAnswersIncorrect = 1;
                            nbrAnswersNotOntime = 0;
                        }
                    }//if (data[i].PlayerStatus) {
                    maxSubmittedQuestionNbr = Math.max(maxSubmittedQuestionNbr, nbrAnswersCorrect + nbrAnswersIncorrect + nbrAnswersNotOntime);

                    dSeries[i + 1][1] = nbrAnswersCorrect;
                    (nbrAnswersCorrect > 0) ? dSeries[i + 1][2] = '(' + (nbrAnswersCorrect) + ')' : dSeries[i + 1][2] = '';

                    dSeries[i + 1][3] = nbrAnswersIncorrect;
                    (nbrAnswersIncorrect > 0) ? dSeries[i + 1][4] = '(' + (nbrAnswersIncorrect) + ')' : dSeries[i + 1][4] = '';

                    dSeries[i + 1][5] = nbrAnswersNotOntime;
                    (nbrAnswersNotOntime > 0) ? dSeries[i + 1][6] = '(' + (nbrAnswersNotOntime) + ')' : dSeries[i + 1][6] = '';

                    maxTickValue = Math.max(maxTickValue, data[i].QuestionNbrLastSubmitted + 1);

                }//for (var i = 0; i < data.length; i++) {

                /*
                SETUP REPORT HEADER
                Header will be different - dependent on the mobile indicator
                Back button will not exist if report loads within an iFrame (then its in mobile mode)
                */
                mostRecentQuestionNbrDeadlinePassed = 'None';
                mostRecentQuestionDeadlinePassed = 'None';
                if (data[0].MostRecentQuestionNbrDeadlinePassed != VAR_NONE) {
                    mostRecentQuestionNbrDeadlinePassed = data[0].MostRecentQuestionNbrDeadlinePassed;
                    mostRecentQuestionDeadlinePassed = (new Date(data[0].MostRecentQuestionDeadlinePassed)).toUTCString();
                }

                htmlHeader =
                   '<div class="reportInCommonTable">\
                                 <div class="reportInCommonRow">\
                                     <div class="reportInCommonCell reportLabel">\
                                         Game:\
                                     </div>\
                                     <div class="reportInCommonCell reportLabelText">\
                                         @ViewBag.GameName\
                                     </div>\
                                     <div class="reportInCommonCell reportLabel" style="padding-left: 20px">\
                                         Question# Submitted:\
                                     </div>\
                                     <div class="reportInCommonCell reportLabelText">\
                                         ' + maxSubmittedQuestionNbr + '\
                                     </div>\
                                 </div>\
                                 <div class="reportInCommonRow">\
                                     <div class="reportInCommonCell reportLabel">\
                                         Question# Deadline Passed:\
                                     </div>\
                                     <div class="reportInCommonCell reportLabelText">\
                                         ' + mostRecentQuestionNbrDeadlinePassed + '\
                                     </div>\
                                     <div class="reportInCommonCell reportLabel" style="padding-left: 20px">\
                                         Deadline:\
                                     </div>\
                                     <div class="reportInCommonCell reportLabelText">\
                                         ' + mostRecentQuestionDeadlinePassed + '\
                                     </div>\
                                 </div>\
                     </div>';
                $('#header').html(htmlHeader);

                $('.reportReturnLink').html('@Html.ActionLink("Back to Game LMS Summary", "GameLMSSummary", "Reports")');


                var tdata = google.visualization.arrayToDataTable(dSeries);

                /*
                SETUP V-AXIS
                */
                var hAxisText = '#Questions Submitted';

                /*
                SETUP GOOGLE CHART STYLE THROUGH OPTIONS
                */

                //We're going use just 5 gridlines (vertical). The first will be 0 (doesn't count)
                //, the last will be the max
                tickArray = GetChartAxisTickets(0, maxTickValue, 4);

                var options = {};
                options = {
                    //title: 'TITLE',
                    //width: 95%, DONT NEED THIS; WE HAVE TURNED ON RESIZING
                    height: Math.round(75 * data.length + 200),
                    chartArea: { left: 130, top: 25, width: '80%', height: '75%' }, //WIDTH CONTROLS IF YOU CAN SEE THE LAST TICK NUMBER
                    colors: ['#00ff00', '#ff0000','#000000'],
                    vAxis: { title: 'Players', titleTextStyle: { fontSize: '20' }, textStyle: {fontSize: '13'} },
                    hAxis: {
                        title: hAxisText,
                        format: '#',
                        titleTextStyle: { fontSize: '20' },
                        ticks: tickArray
                    },
                    backgroundColor: 'transparent',
                    bar: { groupWidth: "75%" }, //CONTROLS SIZE OF BAR AND SPACE BETWEEN BARS
                    isStacked: true,
                    legend: { position: 'top', alignment: 'end', textStyle: { fontSize: 13 } },
                };

                var chart = new google.visualization.BarChart($('#chart_div')[0]); //jquery for document.getElementById
                google.visualization.events.addListener(chart, 'select', selectHandler);
                chart.draw(tdata, options);

                if (IsActivitySelector(resize)) ActivitySelectorOff('#spinner');

                logError('PlayerLMSSummary - func drawContent end', null); //Logging an event on the server

            } catch (err) {
                if (arguments != null && arguments.callee != null && arguments.callee.trace) {
                    logError(err, arguments.callee.trace());
                } else {
                    logError(err, null);
                }

                //retry generating the report (ie.e android emulator had a problem)
                //window.location.reload(true); hopefully won't don't need this. loading via document ready alleviated issue
            }

        });
    }//function drawContent() {
</script>
</head>
<body>
    <div id='spinner'></div>
    <div id="title" class="reportTitle">Player LMS Summary</div>
    <div class="reportReturnLink"></div>
    <div class="reportResetSytle"></div>
    <div id="header" class="reportHeader"></div>
    <div id="parent_chart_div">
        <div id="chart_div" class="chartDiv"></div>
    </div>
</body>
</html>
